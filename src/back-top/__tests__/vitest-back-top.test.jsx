/* eslint-disable @typescript-eslint/no-unused-vars */
/**
 * 该文件由脚本自动生成，如需修改请联系 PMC
 * This file generated by scripts of tdesign-api. `npm run api:docs BackTop VueNext(PC) vitest,finalProject`
 * If you need to modify this file, contact PMC first please.
 */
import { mount } from '@vue/test-utils';
import { vi, describe, it, expect } from 'vitest';
import BackTop from '@/src/back-top/index.ts';

describe('BackTop Component', () => {
  it('props.content works fine', () => {
    const wrapper = mount(<BackTop content={() => <span class="custom-node">TNode</span>}></BackTop>);
    expect(wrapper.find('.custom-node').exists()).toBeTruthy();
    expect(wrapper.element).toMatchSnapshot();
  });

  it('slots.content works fine', () => {
    const wrapper = mount(<BackTop v-slots={{ content: () => <span class="custom-node">TNode</span> }}></BackTop>);
    expect(wrapper.find('.custom-node').exists()).toBeTruthy();
    expect(wrapper.element).toMatchSnapshot();
  });

  it('props.default works fine', () => {
    const wrapper = mount(<BackTop default={() => <span class="custom-node">TNode</span>}></BackTop>);
    expect(wrapper.find('.custom-node').exists()).toBeTruthy();
    expect(wrapper.element).toMatchSnapshot();
  });

  it('slots.default works fine', () => {
    const wrapper = mount(<BackTop v-slots={{ default: () => <span class="custom-node">TNode</span> }}></BackTop>);
    expect(wrapper.find('.custom-node').exists()).toBeTruthy();
    expect(wrapper.element).toMatchSnapshot();
  });

  ['circle', 'square'].forEach((item) => {
    it(`props.shape is equal to ${item}`, () => {
      const wrapper = mount(<BackTop shape={item}></BackTop>);
      expect(wrapper.classes(`t-back-top--${item}`)).toBeTruthy();
      expect(wrapper.element).toMatchSnapshot();
    });
  });

  it('events.click works fine', async () => {
    const fn = vi.fn();
    const wrapper = mount(<BackTop onClick={fn}></BackTop>);
    wrapper.findComponent(BackTop).trigger('click');
    await wrapper.vm.$nextTick();
    expect(fn).toHaveBeenCalled();
    expect(fn.mock.calls[0][0].e.stopPropagation).toBeTruthy();
    expect(fn.mock.calls[0][0].e.type).toBe('click');
  });
});
